# ------------------------------------------------------------------------------
# This file contains all of the error messages the system can send to the client
#
# This and all other YAML files in the ./config directory will be reloaded by the Delivery Aggregator as soon as you save your
# changes. This means that once you add a service here, it will be available to the next incoming request (The Aggregator will
# not dispatch to the new service(s) though until after you add it them to the rules.yaml)
#
# Because the system will auto reload this file make sure that there are no <tab> characters before you save. Tab characters
# break the YAML parser and will cause the Aggregator to shutdown!
# ------------------------------------------------------------------------------

# General
bad_url: 'Invalid URL!'
bad_boolean: 'Must be a boolean value!'

# -------------------------------------------------------------------
# Citation Object Specific
bad_genre: 'Invalid genre!'
bad_content_type: 'Invalid content type!'

# -------------------------------------------------------------------
# Resource Object Specific
bad_format: 'Format must be a ResourceFormat!'

# -------------------------------------------------------------------
# Citation Augmentation Specific
#    will replace the question mark with: method
augmentation: 'Unable to augment the citation for ?!'
#    will replace the question mark with: author.to_s 
author_augmentation: "Unable to attach ? to the citation!"
#    will replace the question mark with: resource.to_s 
resource_augmentation: 'Unable to attach ? to the citation!'


# -------------------------------------------------------------------
# Core object errors
incomplete_citation: 'Your citation does not contain a genre and/or content type!'
#    will replace the question mark with: service.name 
generic_broker_error: 'An error occurred while sending your request to ?.'

# -------------------------------------------------------------------
# Service errors
#    will replace the question mark with: service.name
generic_http_error: "? encountered an error!"
#    will replace the question mark with: service.name
http_bad_uri: "Invalid URI in request to ?!"
#    will replace the question mark with: service.name
http_timeout: 'Request sent to ? timed out!'
#    will replace the question mark with: http status code
http_status: '? responded with an invalid HTTP code: ?'
#    will replace the question marks with: service.name
http_no_response: '? never responded!'
#    will replace the question mark with: service.name
missing_service_config: 'No configuration file could be found for ?!'
#    will replace the question mark with: service.name
missing_base_url: 'No Url was defined for ?!'
missing_name: 'No name was provided for the service!'